@startuml
set namespaceSeparator none
hide empty members
hide empty methods

interface Konafets.DoctrineDbal.Persistence.Database.QueryInterface {
	+getType()
	+bindValue()
	+bindParam()
	+prepare()
	+execute()
	+getSql()
	+getAffectedRows()
	+__toString()
}

interface Konafets.DoctrineDbal.Persistence.Database.TruncateQueryInterface extends Konafets.DoctrineDbal.Persistence.Database.QueryInterface {
	+truncate()
}

abstract class Konafets.DoctrineDbal.Persistence.Doctrine.AbstractQuery {
	+prepare()
	+bindValue()
	+bindParam()
	+execute()
	+getAffectedRows()
	+__toString()
}

class Konafets.DoctrineDbal.Persistence.Doctrine.TuncateQuery extends Konafets.DoctrineDbal.Persistence.Doctrine.AbstractQuery 
class Konafets.DoctrineDbal.Persistence.Doctrine.TuncateQuery implements Konafets.DoctrineDbal.Persistence.Database.TruncateQueryInterface {
	+getType()
	+truncate()
	+getSql()
}

interface Konafets.DoctrineDbal.Persistence.Database.InsertQueryInterface extends Konafets.DoctrineDbal.Persistence.Database.QueryInterface {
	+getType()
	+insertInto()
	+values()
	+where()
}

class Konafets.DoctrineDbal.Persistence.Doctrine.InsertQuery extends Konafets.DoctrineDbal.Persistence.Doctrine.AbstractQuery 

class Konafets.DoctrineDbal.Persistence.Doctrine.InsertQuery implements Konafets.DoctrineDbal.Persistence.Database.InsertQueryInterface {
	+getType()
	+insertInto()
	+values()
	+getSql()
	+where()
}

note bottom of Konafets.DoctrineDbal.Persistence.Doctrine.AbstractQuery {
	__toString 
		return $this->getSql()
}
@enduml
